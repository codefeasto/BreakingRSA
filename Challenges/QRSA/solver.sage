
 
N_a = 2613240571441392195964088630982261349682821645613497396226742971850092862049682714123355029612448609254303796690909646594946069650719320421550307082460305103785198772732273571020529003974320397237096691522804712706512030715753640155668659684093067319185265153545236392472134496428382266600090383797614653942221936332929175557303391656241351117808833959918253404012245633586322491783496235954011173498460231177697737092488315432823871012224368640000000
N_b = 406631291381063062708368640624433195177629887128324992156536215422427085251271158548246052765619573442134462500652616281986273622217404519958464200902599497611719198311591180368508835389781999428982410097278062504076636059232055783729252448502542597951710294264137195997893054083787667027206495381119048279226753306334118272352371363733528942151156768581101905518532465160584386180402709606771189313858666352673319676040954150310530906188677120000000
C_a = 2548711194583905242838482900078294859199882484375229964715550469790767416706725411953362845724983002558821710679258499982960453598798074631796750663774845415692650589352513765870894878170769435087683220330986573614974529690187792931316475879984809267941606365493481277785184076320720487644565808909403821593150101568803446075808715002632463329841749179295823686361086890490703942659897558782785569910876849941888829825694107185482012864247559426111336
C_b = 400941158148299866665115436146084555297152646914223433988293961893848206718639579342053294961462797881591789534709492717097892667288044693824228320005182068933966525404665323301134912609777110824069569544060608441451336249895977866445507357131208911196230972379132737483251711155975474018188763433151191428844929401881703566513896999328525340678378000286116960582957867857836600614501387296599091266404311307529322130111164410987643652390537358307965
e = 65537
D = 41

Q = QuadraticField(D, name='d')
d = Q.gen()
N = N_a + d*N_b
C = C_a + d*C_b


# fs = factor(N.norm())
# print(list(fs))

fs = [(2, 100), (3, 30), (5, 14), (7, 8), (11, 2), (19, 2), (23, 3), (29, 2), (31, 2), (37, 2), (41, 12), (59, 5), (73, 1), (79, 2), (83, 1), (89, 2), (97, 2), (103, 3), (107, 1), (109, 2), (127, 2), (137, 2), (163, 1), (193, 2), (223, 2), (241, 2), (277, 2), (359, 1), (373, 2), (409, 2), (491, 1), (557, 2), (709, 2), (953, 1), (1087, 1), (1171, 2), (1181, 1), (1279, 1), (1613, 2), (1699, 1), (1753, 1), (1951, 2), (2087, 1), (2287, 1), (2371, 2), (2617, 2), (2677, 2), (3467, 1), (4787, 1), (4973, 2), (5227, 1), (5749, 1), (8209, 1), (9013, 2), (9511, 2), (13417, 2), (17383, 1), (17707, 2), (20873, 1), (34747, 1), (50123, 2), (55351, 1), (78341, 2), (107183, 2), (107201, 2), (122827, 1), (211187, 1), (211571, 2), (235793, 2), (284749, 1), (323369, 1), (361111, 2), (435541, 1), (624973, 1), (677857, 1), (3579761, 2), (4740349, 2), (4912667, 2), (14123231, 2), (20525633, 2), (23727503, 2), (53002841, 1), (53746037, 2), (65756291, 1), (293174251, 1), (773536781, 1), (838862707, 1), (977455657, 2), (1336464023, 1), (1744396949, 1), (2964538529, 1), (3092192693, 1), (4637337611, 1), (11504643797, 1), (14397494719, 1), (18518077211, 1), (76109559787, 1), (135459246191, 1), (177546883511, 1), (397469429897, 1), (2437996996537, 1), (13156949475689, 1), (166115488904821, 1), (486097157297989, 1), (3207069623864839, 1), (3478741827570071, 1), (27761873042756701, 1), (67570192600683287, 1), (83829251262990917, 1), (1750082300182405507, 1), (743405992807501703279, 1)]

phi = 1
for (i, pwr) in fs:
    i = int(i)
    phi *= i**(pwr - 1) * (i**2 - 1)

Q_modN.<dmod> = Q.quo(N)

C_mod = C_a + dmod * C_b



rsa_d = pow(e, -1, phi)
res = (C_mod ^ rsa_d).lift()
coeffs = list(res) 

flag = ''
for i in coeffs:
    flag += (int(i)).to_bytes(30, 'big').decode()
    
print(flag)

